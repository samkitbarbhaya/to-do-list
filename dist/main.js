(()=>{"use strict";const e=e=>{let t="No Date";return{get Name(){return e},set Name(t){e=t},get Date(){return t},set Date(e){t=e}}};function t(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function a(e){t(1,arguments);var a=Object.prototype.toString.call(e);return e instanceof Date||"object"===n(e)&&"[object Date]"===a?new Date(e.getTime()):"number"==typeof e||"[object Number]"===a?new Date(e):("string"!=typeof e&&"[object String]"!==a||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function o(e){t(1,arguments);var n=a(e);return n.setHours(0,0,0,0),n}function r(e){if(null===e||!0===e||!1===e)return NaN;var t=Number(e);return isNaN(t)?t:t<0?Math.ceil(t):Math.floor(t)}var s={};function i(){return s}function c(e,n){var o,s,c,u,d,l,m,f;t(1,arguments);var v=i(),g=r(null!==(o=null!==(s=null!==(c=null!==(u=null==n?void 0:n.weekStartsOn)&&void 0!==u?u:null==n||null===(d=n.locale)||void 0===d||null===(l=d.options)||void 0===l?void 0:l.weekStartsOn)&&void 0!==c?c:v.weekStartsOn)&&void 0!==s?s:null===(m=v.locale)||void 0===m||null===(f=m.options)||void 0===f?void 0:f.weekStartsOn)&&void 0!==o?o:0);if(!(g>=0&&g<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var k=a(e),b=k.getDay(),y=(b<g?7:0)+b-g;return k.setDate(k.getDate()-y),k.setHours(0,0,0,0),k}const u=n=>{let s=[];return{get Name(){return n},set Name(e){n=e},get TaskList(){return s},set TaskList(e){s=e},addTask:t=>{if(s.find((e=>{e.Name})))return;let n=e(t);s.push(n)},removeTask:e=>{s=s.filter((t=>t.Name!==e))},getTasksToday:()=>(void 0).taskList.filter((e=>function(e){return t(1,arguments),function(e,n){t(2,arguments);var a=o(e),r=o(n);return a.getTime()===r.getTime()}(e,Date.now())}(a(new Date(e.Date))))),getTasksWeek:()=>(void 0).tasks.filter((e=>function(e,n){return t(1,arguments),function(e,n,a){t(2,arguments);var o=c(e,a),r=c(n,a);return o.getTime()===r.getTime()}(e,Date.now(),n)}(function(e,n){return t(2,arguments),function(e,n){t(2,arguments);var o=a(e),s=r(n);return isNaN(s)?new Date(NaN):s?(o.setDate(o.getDate()+s),o):o}(e,-r(n))}(a(new Date(e.Date)),1))))}};(()=>{const t=(()=>{let e=[u("Inbox"),u("Today"),u("This Week")];const t=t=>e.find((e=>e.Name===t));return{get ProjectList(){return e},addProject:t=>{e.find((e=>e.Name===t))||e.push(u(t))},removeProject:t=>{e=e.filter((e=>e.Name!==t))},getProject:t,updateTodayProject:()=>{t("Today").TaskList=[],e.forEach((e=>{"This Week"!==e.getName()&&"Today"!==e.getName()&&u.getTasksToday().forEach((n=>{const a=`${n.getName()} (${e.getName()})`;t("Today").addTask(a,n.getDate())}))}))},updateWeekProject:()=>{t("This Week").TaskList=[],e.forEach((e=>{"This Week"!==e.getName()&&"Today"!==e.getName()&&u.getTasksWeek().forEach((n=>{const a=`${n.getName()} (${e.getName()})`;t("This Week").addTask(a,n.getDate())}))}))}}})(),n=e("T1"),a=e("T2"),o=u("P1");t.addProject(o.Name),t.getProject(o.Name).addTask(n.Name),t.getProject(o.Name).addTask(a.Name);const r=(e,n)=>{[...document.querySelectorAll(".nav-default-button"),...document.querySelectorAll(".nav-user-button")].forEach((e=>e.classList.remove("active"))),n.classList.add("active");const a=t.ProjectList.find((t=>t.Name===e));document.querySelector(".task-list").innerHTML="",document.querySelector("#project-title").textContent=e,a.TaskList.forEach((e=>{i(e.Name,e.Date)}))},s=e=>{document.querySelector(".projects-list").innerHTML+=`\n            <button class="nav-user-button active" id=${e}>\n                <div class="left-task-panel">\n                    <i class="fa fa-list-check"></i>\n                    <p>${e}</p>\n                </div>\n                <div class="right-task-panel">\n                    <i class="fas fa-times" aria-hidden="true"></i>\n                </div>\n            </button>\n        `},i=(e,t)=>{document.querySelector(".task-list").innerHTML+=`\n            <button class="button-task">\n            <div class="left-task-panel">\n                <i class="far fa-circle" aria-hidden="true"></i>\n                <p class="task-content">${e}</p>\n                <input type="text" class="input-task-name">\n            </div>\n            <div class="right-task-panel">\n                <p class="due-date">${t}</p>\n                <input type="date" class="input-due-date">\n                <i class="fas fa-times" aria-hidden="true"></i>\n            </div>\n            </button>\n        `};return{loadHomePage:()=>{t.ProjectList.forEach((e=>{"Inbox"!==e.Name&&"Today"!==e.Name&&"This Week"!==e.Name&&s(e.Name)})),(()=>{const e=document.querySelector("#inbox-button"),t=document.querySelector("#today-button"),n=document.querySelector("#this-week-button"),a=document.querySelectorAll(".nav-user-button"),o=document.querySelector("#button-add-project");e.addEventListener("click",(e=>{r("Inbox",e.target),document.querySelector(".button-add-task").classList.remove("invisible")})),t.addEventListener("click",(e=>{r("Today",e.target),document.querySelector(".button-add-task").classList.add("invisible")})),n.addEventListener("click",(e=>{r("This Week",e.target),document.querySelector(".button-add-task").classList.add("invisible")})),a.forEach((e=>{e.addEventListener("click",(e=>{r(e.target.id,e.target),document.querySelector(".button-add-task").classList.remove("invisible")}))})),o.addEventListener("click",(()=>{document.querySelector(".button-add-project").classList.add("invisible"),document.querySelector(".add-project-popup").classList.add("active")}))})(),r("Inbox",document.querySelector("#inbox-button"))}}})().loadHomePage()})();